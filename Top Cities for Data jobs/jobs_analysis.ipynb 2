{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 230,
   "metadata": {},
   "outputs": [],
   "source": [
    "# jobs analysis\n",
    "import pandas as pd\n",
    "import csv\n",
    "import re\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Company     5419\n",
       "Location    5419\n",
       "Salary      5419\n",
       "Summary     5419\n",
       "Title       5419\n",
       "dtype: int64"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "al = pd.read_csv(\"datasets/Indeed_job_results_Analytics_2019-01-09.csv\")\n",
    "bi = pd.read_csv(\"datasets/Indeed_job_results_Business_Intelligence_Analyst_2019-01-09.csv\")\n",
    "da = pd.read_csv(\"datasets/Indeed_job_results_Data_Analyst_2019-01-09.csv\")\n",
    "de = pd.read_csv(\"datasets/Indeed_job_results_Data_Engineer_2019-01-09.csv\")\n",
    "ds = pd.read_csv(\"datasets/Indeed_job_results_Data_Scientist_2019-01-09.csv\")\n",
    "st = pd.read_csv(\"datasets/Indeed_job_results_Statistician_2019-01-09.csv\")\n",
    "data_jobs = pd.concat([al, bi, da, de, ds, st], sort = True)\n",
    "data_jobs.head()\n",
    "data_jobs.count()\n",
    "data_jobs = data_jobs.drop_duplicates()\n",
    "data_jobs.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_jobs[\"Job Category\"] = \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Other                            1010\n",
       "Analytics                         871\n",
       "Data Analyst                      788\n",
       "Data Scientist                    738\n",
       "Data Engineer                     679\n",
       "Business Intelligence Analyst     452\n",
       "Management                        233\n",
       "Statistician                      185\n",
       "Business Analyst                  165\n",
       "Research                          162\n",
       "Internship                        107\n",
       "Developer                          29\n",
       "Name: Job Category, dtype: int64"
      ]
     },
     "execution_count": 233,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Categorize each of the jobs based on their titles to an suitable category\n",
    "for i, row in data_jobs.iterrows():\n",
    "    if re.search(\"Analytics\", row[\"Title\"].title()) or re.search(\"Analytic\", row[\"Title\"].title()):\n",
    "        row[\"Job Category\"] = \"Analytics\"\n",
    "    elif re.search(\"Data\", row[\"Title\"].title()) and re.search(\"Analyst\", row[\"Title\"].title()):\n",
    "        row[\"Job Category\"] = \"Data Analyst\"\n",
    "    elif re.search(\"Data\", row[\"Title\"].title()) and re.search(\"Scientist\", row[\"Title\"].title()):\n",
    "        row[\"Job Category\"] = \"Data Scientist\"\n",
    "    elif re.search(\"Data\", row[\"Title\"].title()) and re.search(\"Engineer\", row[\"Title\"].title()):\n",
    "        row[\"Job Category\"] = \"Data Engineer\"\n",
    "    elif re.search(\"Business\", row[\"Title\"].title()) and re.search(\"Intelligence\", row[\"Title\"].title()):   \n",
    "        row[\"Job Category\"] = \"Business Intelligence Analyst\"\n",
    "    elif re.search(\"Intern\", row[\"Title\"].title()) or re.search(\"Internship\", row[\"Title\"].title()):\n",
    "        row[\"Job Category\"] = \"Internship\"\n",
    "    elif re.search(\"Business\", row[\"Title\"].title()) and re.search(\"Analyst\", row[\"Title\"].title()):   \n",
    "        row[\"Job Category\"] = \"Business Analyst\"\n",
    "    elif re.search(\"Developer\", row[\"Title\"].title()):   \n",
    "        row[\"Job Category\"] = \"Developer\"\n",
    "    elif \"Statistician\" in row[\"Title\"].title():\n",
    "        row[\"Job Category\"] = \"Statistician\"\n",
    "    elif re.search(\"Manager\", row[\"Title\"].title()) or \\\n",
    "    re.search(\"Director\", row[\"Title\"].title()) or \\\n",
    "    re.search(\"Dir\", row[\"Title\"].title()) or \\\n",
    "    re.search(\"Lead\", row[\"Title\"].title()) or \\\n",
    "    re.search(\"Head\", row[\"Title\"].title()):\n",
    "        row[\"Job Category\"] = \"Management\"\n",
    "    elif re.search(\"Research\", row[\"Title\"].title()):\n",
    "        row[\"Job Category\"] = \"Research\"\n",
    "    else:\n",
    "        row[\"Job Category\"] = \"Other\"\n",
    "\n",
    "# check the counts for each category\n",
    "data_jobs[\"Job Category\"].value_counts()\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Output the jobs in Other category to CSV for visual inspection\n",
    "data_jobs.loc[data_jobs[\"Job Category\"] == \"Other\"].to_csv(\"Other.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split the Location column into City, State, ZIP and Area columns \n",
    "data_jobs[[\"City\", \"State Code\"]] = data_jobs[\"Location\"].str.split(\",\", n=1, expand=True)\n",
    "data_jobs[\"State Code\"] = data_jobs[\"State Code\"].str.strip()\n",
    "data_jobs[[\"State Code\", \"ZIP\"]] = data_jobs[\"State Code\"].str.split(\" \", n=1, expand=True)\n",
    "data_jobs[\"ZIP\"] = data_jobs[\"ZIP\"].str.strip()\n",
    "data_jobs[[\"ZIP\", \"Area\"]] = data_jobs[\"ZIP\"].str.split(\" \", n=1, expand=True)\n",
    "data_jobs[\"State Code\"].value_counts()\n",
    "data_jobs[\"City\"].value_counts()\n",
    "data_jobs[\"ZIP\"].value_counts()\n",
    "data_jobs[\"Area\"].value_counts()\n",
    "data_jobs.to_csv(\"jobs_data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data cleansing the Crime_data.csv\n",
    "crime_data = pd.read_csv(\"datasets/Crime_data.csv\")\n",
    "\n",
    "# Split the City column to take out the County details\n",
    "crime_data[[\"City\", \"County\"]] = crime_data[\"City\"].str.split(\",\", n=1, expand=True)\n",
    "crime_data[\"County\"] = crime_data[\"County\"].str.strip()\n",
    "\n",
    "# Take off the Township from the city name\n",
    "crime_data[\"City\"] = [re.sub(' Township$', '', city) for city in crime_data[\"City\"]]\n",
    "\n",
    "# Output for visual inspection\n",
    "crime_data.to_csv(\"crime_data_reloaded.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/cooldude/anaconda3/lib/python3.7/site-packages/pandas/core/generic.py:5434: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  self._update_inplace(new_data)\n",
      "/Users/cooldude/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:15: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  from ipykernel import kernelapp as app\n",
      "/Users/cooldude/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:16: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  app.launch_new_instance()\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>Summary</th>\n",
       "      <th>Company</th>\n",
       "      <th>Salary</th>\n",
       "      <th>Job Category</th>\n",
       "      <th>City</th>\n",
       "      <th>State Code</th>\n",
       "      <th>Population</th>\n",
       "      <th>Violent crime</th>\n",
       "      <th>Property crime</th>\n",
       "      <th>Violent crime /100</th>\n",
       "      <th>Property crime /100</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Senior Operations Analyst</td>\n",
       "      <td>3-5 years of experience working with supply ch...</td>\n",
       "      <td>National Retail Systems, Inc.</td>\n",
       "      <td>Not available</td>\n",
       "      <td>Other</td>\n",
       "      <td>Hasbrouck Heights</td>\n",
       "      <td>NJ</td>\n",
       "      <td>12286.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>0.016279</td>\n",
       "      <td>0.496500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ADVANCED ANALYTICAL DEVELOPER - ENTERPRISE ANA...</td>\n",
       "      <td>This position will help build out infrastructu...</td>\n",
       "      <td>UNC Health Care</td>\n",
       "      <td>Not available</td>\n",
       "      <td>Analytics</td>\n",
       "      <td>Morrisville</td>\n",
       "      <td>NC</td>\n",
       "      <td>25904.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>411.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.586628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BUSINESS ANALYTICS SPECIALIST - PROGRAMS AND A...</td>\n",
       "      <td>Thorough understanding of Business Intelligenc...</td>\n",
       "      <td>UNC Health Care</td>\n",
       "      <td>Not available</td>\n",
       "      <td>Analytics</td>\n",
       "      <td>Morrisville</td>\n",
       "      <td>NC</td>\n",
       "      <td>25904.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>411.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.586628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HCS ADVANCED ANALYTICAL CONSULTANT - ENTERPRIS...</td>\n",
       "      <td>Possessing a broad combination of skills cover...</td>\n",
       "      <td>UNC Health Care</td>\n",
       "      <td>Not available</td>\n",
       "      <td>Analytics</td>\n",
       "      <td>Morrisville</td>\n",
       "      <td>NC</td>\n",
       "      <td>25904.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>411.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.586628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>BUSINESS INTELLIGENCE ANALYST - PROGRAMS AND A...</td>\n",
       "      <td>The Business Intelligence Analyst (BIA) provid...</td>\n",
       "      <td>UNC Health Care</td>\n",
       "      <td>Not available</td>\n",
       "      <td>Analytics</td>\n",
       "      <td>Morrisville</td>\n",
       "      <td>NC</td>\n",
       "      <td>25904.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>411.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.586628</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               Title  \\\n",
       "0                          Senior Operations Analyst   \n",
       "1  ADVANCED ANALYTICAL DEVELOPER - ENTERPRISE ANA...   \n",
       "2  BUSINESS ANALYTICS SPECIALIST - PROGRAMS AND A...   \n",
       "3  HCS ADVANCED ANALYTICAL CONSULTANT - ENTERPRIS...   \n",
       "4  BUSINESS INTELLIGENCE ANALYST - PROGRAMS AND A...   \n",
       "\n",
       "                                             Summary  \\\n",
       "0  3-5 years of experience working with supply ch...   \n",
       "1  This position will help build out infrastructu...   \n",
       "2  Thorough understanding of Business Intelligenc...   \n",
       "3  Possessing a broad combination of skills cover...   \n",
       "4  The Business Intelligence Analyst (BIA) provid...   \n",
       "\n",
       "                         Company         Salary Job Category  \\\n",
       "0  National Retail Systems, Inc.  Not available        Other   \n",
       "1                UNC Health Care  Not available    Analytics   \n",
       "2                UNC Health Care  Not available    Analytics   \n",
       "3                UNC Health Care  Not available    Analytics   \n",
       "4                UNC Health Care  Not available    Analytics   \n",
       "\n",
       "                City State Code  Population  Violent crime  Property crime  \\\n",
       "0  Hasbrouck Heights         NJ     12286.0            2.0            61.0   \n",
       "1        Morrisville         NC     25904.0            0.0           411.0   \n",
       "2        Morrisville         NC     25904.0            0.0           411.0   \n",
       "3        Morrisville         NC     25904.0            0.0           411.0   \n",
       "4        Morrisville         NC     25904.0            0.0           411.0   \n",
       "\n",
       "   Violent crime /100  Property crime /100  \n",
       "0            0.016279             0.496500  \n",
       "1            0.000000             1.586628  \n",
       "2            0.000000             1.586628  \n",
       "3            0.000000             1.586628  \n",
       "4            0.000000             1.586628  "
      ]
     },
     "execution_count": 237,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Merge the crime data with jobs data\n",
    "data_jobs_df = pd.merge(data_jobs, crime_data, how=\"inner\", on=[\"City\", \"State Code\"]) \n",
    "data_jobs_df.reset_index()\n",
    "\n",
    "# Cleaned dataset\n",
    "data_jobs_crime = data_jobs_df[[\"Title\", \"Summary\", \"Company\", \"Salary\", \"Job Category\", \"City\", \n",
    "                                \"State Code\", \"Population\", \"Violent crime\", \"Property crime\"]]\n",
    "\n",
    "# Replacing Nan with '0'\n",
    "data_jobs_crime[\"Violent crime\"].fillna(0, inplace=True)\n",
    "data_jobs_crime[\"Property crime\"].fillna(0, inplace=True)\n",
    "data_jobs_crime.head()\n",
    "\n",
    "# Create per capita (100) people\n",
    "data_jobs_crime[\"Violent crime /100\"] = (data_jobs_crime[\"Violent crime\"]*100)/data_jobs_crime[\"Population\"]  \n",
    "data_jobs_crime[\"Property crime /100\"] = (data_jobs_crime[\"Property crime\"]*100)/data_jobs_crime[\"Population\"]  \n",
    "data_jobs_crime.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Title                  4055\n",
       "Summary                4055\n",
       "Company                4055\n",
       "Salary                 4055\n",
       "Job Category           4055\n",
       "City                   4055\n",
       "State Code             4055\n",
       "Population             4055\n",
       "Violent crime          4055\n",
       "Property crime         4055\n",
       "Violent crime /100     4055\n",
       "Property crime /100    4055\n",
       "dtype: int64"
      ]
     },
     "execution_count": 238,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_jobs_crime.count()\n",
    "# data_jobs_df.to_csv(\"data_jobs.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Violent Crime /100</th>\n",
       "      <th>Property Crime /100</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>City</th>\n",
       "      <th>State Code</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Ada</th>\n",
       "      <th>OK</th>\n",
       "      <td>0.326554</td>\n",
       "      <td>3.466056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Addison</th>\n",
       "      <th>TX</th>\n",
       "      <td>0.601456</td>\n",
       "      <td>4.893954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Agoura Hills</th>\n",
       "      <th>CA</th>\n",
       "      <td>0.076871</td>\n",
       "      <td>1.335639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Akron</th>\n",
       "      <th>OH</th>\n",
       "      <td>0.697526</td>\n",
       "      <td>4.234798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Alameda</th>\n",
       "      <th>CA</th>\n",
       "      <td>0.317198</td>\n",
       "      <td>2.942541</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Violent Crime /100  Property Crime /100\n",
       "City         State Code                                         \n",
       "Ada          OK                    0.326554             3.466056\n",
       "Addison      TX                    0.601456             4.893954\n",
       "Agoura Hills CA                    0.076871             1.335639\n",
       "Akron        OH                    0.697526             4.234798\n",
       "Alameda      CA                    0.317198             2.942541"
      ]
     },
     "execution_count": 239,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a grouped dataframe\n",
    "data_jobs_crime_grp = data_jobs_crime.groupby([\"City\", \"State Code\"])\n",
    "data_jobs_crime_df = pd.DataFrame({'Violent Crime /100': data_jobs_crime_grp['Violent crime /100'].mean(),\n",
    "                         'Property Crime /100': data_jobs_crime_grp['Property crime /100'].mean()})\n",
    "\n",
    "data_jobs_crime_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data cleansing \n",
    "data_jobs_crime_df.drop(\"Industry\", inplace=True)\n",
    "data_jobs_crime_df = data_jobs_crime_df.reset_index()\n",
    "data_jobs_crime_df[\"Location\"] = data_jobs_crime_df[\"City\"] + \", \" + data_jobs_crime_df[\"State Code\"]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>State Code</th>\n",
       "      <th>Violent Crime /100</th>\n",
       "      <th>Property Crime /100</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>553</th>\n",
       "      <td>Teterboro</td>\n",
       "      <td>NJ</td>\n",
       "      <td>7.246377</td>\n",
       "      <td>178.260870</td>\n",
       "      <td>Teterboro, NJ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341</th>\n",
       "      <td>McKeesport</td>\n",
       "      <td>PA</td>\n",
       "      <td>2.125424</td>\n",
       "      <td>2.765439</td>\n",
       "      <td>McKeesport, PA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>538</th>\n",
       "      <td>St. Louis</td>\n",
       "      <td>MO</td>\n",
       "      <td>2.082286</td>\n",
       "      <td>6.041240</td>\n",
       "      <td>St. Louis, MO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>Detroit</td>\n",
       "      <td>MI</td>\n",
       "      <td>2.056673</td>\n",
       "      <td>4.540603</td>\n",
       "      <td>Detroit, MI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Baltimore</td>\n",
       "      <td>MD</td>\n",
       "      <td>2.027015</td>\n",
       "      <td>4.928109</td>\n",
       "      <td>Baltimore, MD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           City State Code  Violent Crime /100  Property Crime /100  \\\n",
       "553   Teterboro         NJ            7.246377           178.260870   \n",
       "341  McKeesport         PA            2.125424             2.765439   \n",
       "538   St. Louis         MO            2.082286             6.041240   \n",
       "151     Detroit         MI            2.056673             4.540603   \n",
       "33    Baltimore         MD            2.027015             4.928109   \n",
       "\n",
       "           Location  \n",
       "553   Teterboro, NJ  \n",
       "341  McKeesport, PA  \n",
       "538   St. Louis, MO  \n",
       "151     Detroit, MI  \n",
       "33    Baltimore, MD  "
      ]
     },
     "execution_count": 241,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Top 5 Cities with least Violent crime rates for the data jobs \n",
    "data_jobs_crime_df.sort_values(\"Violent Crime /100\", ascending=False).head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>State Code</th>\n",
       "      <th>Violent Crime /100</th>\n",
       "      <th>Property Crime /100</th>\n",
       "      <th>Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>553</th>\n",
       "      <td>Teterboro</td>\n",
       "      <td>NJ</td>\n",
       "      <td>7.246377</td>\n",
       "      <td>178.260870</td>\n",
       "      <td>Teterboro, NJ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>Emeryville</td>\n",
       "      <td>CA</td>\n",
       "      <td>1.261382</td>\n",
       "      <td>17.408738</td>\n",
       "      <td>Emeryville, CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>Frazer</td>\n",
       "      <td>PA</td>\n",
       "      <td>0.524934</td>\n",
       "      <td>12.773403</td>\n",
       "      <td>Frazer, PA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>Newington</td>\n",
       "      <td>NH</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>12.688442</td>\n",
       "      <td>Newington, NH</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>600</th>\n",
       "      <td>Wilkes-Barre</td>\n",
       "      <td>PA</td>\n",
       "      <td>0.535341</td>\n",
       "      <td>10.424625</td>\n",
       "      <td>Wilkes-Barre, PA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             City State Code  Violent Crime /100  Property Crime /100  \\\n",
       "553     Teterboro         NJ            7.246377           178.260870   \n",
       "178    Emeryville         CA            1.261382            17.408738   \n",
       "214        Frazer         PA            0.524934            12.773403   \n",
       "395     Newington         NH            0.000000            12.688442   \n",
       "600  Wilkes-Barre         PA            0.535341            10.424625   \n",
       "\n",
       "             Location  \n",
       "553     Teterboro, NJ  \n",
       "178    Emeryville, CA  \n",
       "214        Frazer, PA  \n",
       "395     Newington, NH  \n",
       "600  Wilkes-Barre, PA  "
      ]
     },
     "execution_count": 242,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Top 5 Cities with least Violent crime rates for the data jobs \n",
    "data_jobs_crime_df.sort_values(\"Property Crime /100\", ascending=False).head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Chart to display Top Cities Vs Min Crime per 100 people for data jobs\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "ax = plt.scatter(data_jobs_crime_df[\"Location\"], data_jobs_crime_df[\"Violent Crime /100\"], marker='o',\n",
    "                                color='teal', edgecolor='k')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
